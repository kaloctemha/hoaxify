package com.hoaxify.ws.auth;

import java.util.Base64;
import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RestController;

import com.fasterxml.jackson.annotation.JsonView;
import com.hoaxify.ws.error.ApiError;
import com.hoaxify.ws.shared.Views;
import com.hoaxify.ws.user.User;
import com.hoaxify.ws.user.UserRepositoryIF;

@RestController
public class AuthController {
	
	@Autowired
	UserRepositoryIF userRepository;
	
	PasswordEncoder encoder = new BCryptPasswordEncoder();

	@PostMapping("/api/1.0/auth")
	@JsonView(Views.Base.class)
	ResponseEntity<?> handleAuthentication(@RequestHeader(name = "Authorization", required = false) String authorization) {
		String base64Encoded = authorization.split("Basic ")[1];  // 
		String decoded = new String(Base64.getDecoder().decode(base64Encoded)); // dXNlcjE6cGFzc3dvcmQ=
		String[] parts = decoded.split(":"); // [user1 , password]
		String username = parts[0];
		String pwd = parts[1];
		User userInDB = userRepository.findByuserName(username);
		if(userInDB == null) {
			ApiError apiError = new ApiError(401, "UNAUTHORIZED request", "/api/1.0/auth");
			return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(apiError);
		}
		
		String hashedPwd = userInDB.getPassword();
		if(!encoder.matches(pwd, hashedPwd)) {
			ApiError apiError = new ApiError(401, "UNAUTHORIZED request", "/api/1.0/auth");
			return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(apiError);
		}
		
		// username, displayname, image
		Map<String, String> responseBody = new HashMap<>();
		responseBody.put("username", userInDB.getUserName());
		responseBody.put("displayname", userInDB.getDisplayName());
		responseBody.put("image", userInDB.getImage());
		
		return ResponseEntity.ok(userInDB);

	}
}
